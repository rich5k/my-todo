{"version":3,"sources":["components/Footer.jsx","components/Task.jsx","components/Tasks.jsx","components/Comment.jsx","components/TaskItem.jsx","components/TaskItems.jsx","App.js","reportWebVitals.js","index.js"],"names":["Footer","react_default","a","createElement","className","Task","props","navigate","useNavigate","onClick","task","id","param","concat","console","log","bind","name","itemNum","date","substring","fetch","method","then","getData","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","Tasks","_useState","useState","_useState2","Object","slicedToArray","setName","_useState3","_useState4","tasks","setTasks","_useState5","_useState6","items","setItems","headers","Content-Type","Accept","response","json","myJson","useEffect","_useState7","_useState8","isHidden","setHidden","ToggleClass","calcItemNum","taskId","map","item","taskCategoryId","length","components_Task","key","updatedOn","PuffLoader_default","color","loading","size","class","stroke-width","stroke-linecap","stroke-linejoin","action","type","value","onChange","e","target","placeholder","required","preventDefault","createdOn","Date","toISOString","body","JSON","stringify","components_Footer","Comment","setIsHidden","editComment","message","setMessage","fillRule","clipRule","title","description","desc","status","parseInt","comments","dateStarted","dateEnded","comment","index","updatedComment","TaskItem","isExpanded","setExpanded","addComment","isChecked","setIsChecked","checked","checkedItem","defaultChecked","push","newComment","components_Comment","TaskItems","useParams","setTitle","setDesc","_useState9","_useState10","components_TaskItem","App","react_router_dom","react_router","path","element","components_TaskItems","components_Tasks","reportWebVitals","onPerfEntry","Function","__webpack_require__","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c99e5cdd.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Footer = () => {\r\n    return ( \r\n        <div className=\"Footer\">\r\n            <footer>\r\n                <p>Made by Richard Kafui Anatsui &copy; 2022. All rights reserved.</p>            \r\n            </footer>\r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Footer;","import React from \"react\";\r\nimport { useNavigate} from \"react-router-dom\";\r\nconst Task = (props) => {\r\n    // handles deletion of task category\r\n    const deleteTask =()=>{\r\n        fetch('https://rich5k.github.io/my-todo-data/taskCategory.json/'+ props.id\r\n        ,{\r\n            method: \"DELETE\",\r\n        }\r\n        )\r\n        .then(()=>{\r\n            console.log(\"task deleted\");\r\n            props.getData();\r\n        })\r\n    }\r\n    const navigate = useNavigate();\r\n    // handles redirection to task's item page\r\n    const routeChange = (task,id)=>{\r\n        // id.preventDefault();\r\n      let path = '/task';\r\n      let param= task;\r\n      navigate(`${path}/${param}`);\r\n      console.log('ID: '+task);\r\n    }\r\n    return ( \r\n        <div className=\"Task bg-white my-6 mx-8 text-center rounded-lg p-4 grid grid-cols-4\">\r\n            <div onClick={routeChange.bind(null,props.id)} className=\"col-span-3\">\r\n                <div className=\"name font-bold\">{props.name}</div>\r\n                <div className=\"grid grid-cols-3\">\r\n                    <div className=\"item-num\">{props.itemNum} item(s)</div>\r\n                    <div></div>\r\n                    <div className=\"updated-date\">{props.date.substring(0, 10)}</div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"delete-task p-4 text-center text-red-600\">\r\n                <button onClick={deleteTask}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                    </svg>\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Task;","import Footer from \"./Footer\";\r\nimport Task from \"./Task\";\r\nimport React,{useState,useEffect} from 'react';\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\nconst Tasks = () => {\r\n    const [name,setName]=useState('');\r\n    const [tasks,setTasks]=useState([]);\r\n    const [items,setItems]=useState([]);\r\n    const loading=\"true\";\r\n    const color= \"#51E24A\";\r\n    //gets taskCategory and task data\r\n    const getData=()=>{\r\n        fetch('https://rich5k.github.io/my-todo-data/taskCategory.json'\r\n        ,{\r\n        headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        }\r\n        }\r\n        )\r\n        .then(function(response){\r\n            // console.log(response)\r\n            return response.json();\r\n        })\r\n        .then(function(myJson) {\r\n            //console.log(myJson);\r\n            setTasks(myJson);\r\n        });\r\n\r\n        fetch('https://rich5k.github.io/my-todo-data/task.json'\r\n        ,{\r\n        headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        }\r\n        }\r\n        )\r\n        .then(function(response){\r\n            // console.log(response)\r\n            return response.json();\r\n        })\r\n        .then(function(myJson) {\r\n            //console.log(myJson);\r\n            setItems(myJson);\r\n        });\r\n    }\r\n    useEffect(()=>{\r\n        getData()\r\n    },[])\r\n    const [isHidden, setHidden] = useState(\"false\");\r\n    // toggles visibility of add task category form\r\n    const ToggleClass = () => {\r\n        setHidden(!isHidden);\r\n        setName('');\r\n    };\r\n    // handles addition of task category\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        var createdOn = new Date().toISOString();\r\n        var updatedOn = new Date().toISOString();\r\n        const task = {name, createdOn,updatedOn};\r\n        \r\n        fetch('https://rich5k.github.io/my-todo-data/taskCategory.json'\r\n        ,{\r\n            method: \"POST\",\r\n            headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(task)\r\n        }\r\n        )\r\n        .then(()=>{\r\n            console.log(\"new task category added\");\r\n            getData();\r\n            ToggleClass();\r\n        })\r\n    }\r\n\r\n    const calcItemNum=(taskId)=>{\r\n        let itemNum=0;\r\n        items.map((item)=>{\r\n            if(item.taskCategoryId===taskId){\r\n                itemNum=itemNum+1;\r\n            }\r\n            \r\n        })\r\n        return itemNum;\r\n    }\r\n    return ( \r\n        <div className=\"Tasks text-center mt-8 grid grid-cols-3\">\r\n            <div></div>\r\n            <div>\r\n                <div className=\"text-3xl text-white font-bold\">Tasks</div>\r\n                {\r\n                    (tasks && items && tasks.length>0 && items.length>0)?\r\n                    tasks.map((task)=>(\r\n                        \r\n                        <Task key={task.id} id={task.id} name={task.name} date={task.updatedOn} itemNum={calcItemNum(task.id)} getData={getData} />\r\n                        \r\n                    )):\r\n                    // show spinner when getting data\r\n                    <div className=\"mt-30\">\r\n                        <PuffLoader color={color} loading={loading} size={150} />\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div>\r\n                <button onClick={ToggleClass} className=\"add-task text-green-600 bg-white p-4 text-xl font-bold rounded-full\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"4\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 4v16m8-8H4\" />\r\n                    </svg>\r\n                </button>\r\n                {/* section for task category addition form */}\r\n                <form action=\"\" className={isHidden ? \"add-form m-12 hidden\" : \"add-form m-12\"}>\r\n                    <input type=\"text\" value={name} onChange={e=>setName(e.target.value)} class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg  block w-60 p-2.5  \" placeholder=\"Groceries\" required></input>\r\n                    <button onClick={handleSubmit} class=\"mt-4 text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\">Create</button>\r\n                </form>\r\n\r\n            </div>\r\n\r\n            <Footer />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Tasks;","import React, {useState} from 'react';\r\nconst Comment = (props) => {\r\n    const [isHidden, setIsHidden]= useState(\"false\");\r\n    // toggles visibility of update comment form\r\n    const editComment= ()=>{\r\n        setIsHidden(!isHidden);\r\n    }\r\n    const [message, setMessage]=useState(props.message);\r\n\r\n    //handles updating of comment\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        var title=props.title;\r\n        var description = props.desc;\r\n        var status = props.status;\r\n        var taskCategoryId = parseInt(props.taskCategoryId);\r\n        var comments= props.comments;\r\n        var dateStarted = props.dateStarted;\r\n        var dateEnded = props.dateEnded;\r\n        // var createdOn = props.createdOn;\r\n        var updatedOn = new Date().toISOString();\r\n        comments.map((comment,index)=>{\r\n            if(parseInt(index)===parseInt(props.id)){\r\n                comment.message=message;\r\n                comment.updatedOn=updatedOn;\r\n            }\r\n        })\r\n        // comments.push({message, createdOn, updatedOn});\r\n        const updatedComment= {title, description,status,taskCategoryId, comments,dateStarted, dateEnded};\r\n        \r\n        fetch('https://rich5k.github.io/my-todo-data/task.json/'+props.taskId\r\n        ,{\r\n            method: \"PUT\",\r\n            headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(updatedComment)\r\n        }\r\n        )\r\n        .then(()=>{\r\n            console.log(\"comment updated\");\r\n            // getData();\r\n            editComment();\r\n            props.getData();\r\n        })\r\n    }\r\n    return ( \r\n        <div className=\"Comment\">\r\n            {isHidden?\r\n            <span className=\"grid grid-cols-4\">\r\n                <div className=\"comment-text col-span-3\">\r\n                    {props.message}\r\n                </div>\r\n                <div className=\"edit-comment\">\r\n                    <button onClick={editComment}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\r\n                        <path fillRule=\"evenodd\" d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\" clipRule=\"evenodd\" />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            </span>\r\n            :\r\n            <form action=\"\" className={isHidden ? \"add-comment grid grid-cols-4 hidden\" : \"add-comment grid grid-cols-2\"}>\r\n                <div className='col-span-3'>\r\n                    <input type=\"text\" value={message} onChange={e=>setMessage(e.target.value)} class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg  block w-60 p-2.5  \" placeholder=\"Hmmm...I think I can finish\" required></input>\r\n                </div>\r\n                <div>\r\n                    <button onClick={handleSubmit} class=\" text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\">update</button>\r\n                </div>\r\n            </form>}\r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Comment;","import React, { useState } from 'react';\r\nimport Comment from './Comment';\r\nconst TaskItem = (props) => {\r\n    const [isExpanded, setExpanded] = useState(\"false\");\r\n    const [isHidden, setIsHidden] = useState(\"false\");\r\n    const [message, setMessage] = useState(\"\");\r\n    //toggles the visibility of the extra info(desc and co.) of the item\r\n    const ToggleExpansion = () => {\r\n        setExpanded(!isExpanded);\r\n    };\r\n    //toggles the visibility of the add comment form\r\n    const addComment = () => {\r\n        setIsHidden(!isHidden);\r\n    };\r\n\r\n    //handles the creation of a new comment\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        var title = props.title;\r\n        var description = props.desc;\r\n        var status = props.status;\r\n        var taskCategoryId = parseInt(props.taskCategoryId);\r\n        var comments = props.comments;\r\n        var dateStarted = props.dateStarted;\r\n        var dateEnded = props.dateEnded;\r\n        var createdOn = new Date().toISOString();\r\n        var updatedOn = new Date().toISOString();\r\n        comments.push({ message, createdOn, updatedOn });\r\n        const newComment = { title, description, status, taskCategoryId, comments, dateStarted, dateEnded };\r\n\r\n        fetch('https://rich5k.github.io/my-todo-data/task.json/' + props.id\r\n            , {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify(newComment)\r\n            }\r\n        )\r\n            .then(() => {\r\n                console.log(\"new comment added\");\r\n                // getData();\r\n                addComment();\r\n                setMessage('');\r\n            })\r\n    }\r\n\r\n    //deletes item\r\n    const deleteTask = () => {\r\n        fetch('https://rich5k.github.io/my-todo-data/task.json/' + props.id\r\n            , {\r\n                method: \"DELETE\",\r\n            }\r\n        )\r\n            .then(() => {\r\n                console.log(\"item deleted\");\r\n                props.getData();\r\n            })\r\n    }\r\n\r\n    const [isChecked, setIsChecked] = useState(props.status === \"pending\"?false:true);\r\n\r\n    //handles updating the status of the item when checked\r\n    const handleCheck = (e) => {\r\n        var checked=!isChecked;\r\n        setIsChecked(checked);\r\n        e.preventDefault();\r\n        var title = props.title;\r\n        var description = props.desc;\r\n        var status = props.status;\r\n        if(checked){\r\n            status=\"done\";\r\n        }else{\r\n            status=\"pending\";\r\n        }\r\n        var taskCategoryId = parseInt(props.taskCategoryId);\r\n        var comments = props.comments;\r\n        var dateStarted = props.dateStarted;\r\n        var dateEnded = new Date().toISOString();\r\n        \r\n        const checkedItem = { title, description, status, taskCategoryId, comments, dateStarted, dateEnded };\r\n\r\n        fetch('https://rich5k.github.io/my-todo-data/task.json/' + props.id\r\n            , {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify(checkedItem)\r\n            }\r\n        )\r\n            .then(() => {\r\n                console.log(\"item checked\");\r\n                props.getData();\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"TaskItem bg-white text-blue-600 font-bold my-6 mx-8 rounded-lg pb-4\">\r\n            <div className=\"grid grid-cols-4 p-4\">\r\n                {/* item title */}\r\n                <div className={isChecked?\"item-title col-span-3 line-through\":\"item-title col-span-3\"}>\r\n                    {props.title}\r\n                </div>\r\n                <div className=\"item-checkbox text-center\">\r\n                    <input type=\"checkbox\" class=\"default:ring-2 rounded h-4 w-4 \" onChange={handleCheck} defaultChecked={isChecked} />\r\n                </div>\r\n            </div>\r\n            {/* dropdown arrow */}\r\n            <div className=\"grid grid-cols-4\">\r\n                {isChecked?<div></div>:\r\n                    <div onClick={ToggleExpansion} className=\"expand-item col-span-3 text-gray-600 pl-4\">\r\n                        {isExpanded ?\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5 15l7-7 7 7\" />\r\n                            </svg>\r\n                            :\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19 9l-7 7-7-7\" />\r\n                            </svg>\r\n                        }\r\n                    </div>\r\n                }\r\n                {/* trash icon */}\r\n                <div className=\"delete-task pr-4 text-center text-red-600\">\r\n                    <button onClick={deleteTask}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                        </svg>\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n            {/* extra information for item */}\r\n            {isChecked?'':\r\n                <div className={isExpanded ? \"extra-info font-thin pl-4\" : \"extra-info font-thin pl-4 hidden\"}>\r\n                    <div className=\"desc text-gray-500\">\r\n                        <span className=\"font-bold\">Desc:</span> {props.desc}\r\n                    </div>\r\n                    <div className=\"comments\">\r\n                        <span className=\"font-bold\">Comments:</span>\r\n                        <button onClick={addComment} class=\"mt-4 ml-10 text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\">Add Comment</button>\r\n                        <form action=\"\" className={isHidden ? \"add-comment hidden\" : \"add-comment\"}>\r\n                            <input type=\"text\" value={message} onChange={e => setMessage(e.target.value)} class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg  block w-60 p-2.5  \" placeholder=\"Hmmm...I think I can finish\" required></input>\r\n                            <button onClick={handleSubmit} class=\"mt-4 text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\">Add</button>\r\n                        </form>\r\n                        {props.comments && props.comments.length > 0 && props.comments.map((comment, index) => (\r\n                            <Comment id={index} message={comment.message} title={props.title} desc={props.desc} status={props.status}\r\n                                taskCategoryId={props.taskCategoryId} comments={props.comments} dateStarted={props.dateStarted}\r\n                                dateEnded={props.dateEnded} taskId={props.id} createdOn={comment.createdOn} getData={props.getData()} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskItem;","import { useNavigate, useParams} from \"react-router-dom\";\r\nimport React, {useState,useEffect} from 'react';\r\nimport Footer from \"./Footer\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\nconst TaskItems = () => {\r\n    const {id}= useParams();\r\n    const navigate = useNavigate();\r\n    const goHome= ()=>{\r\n        navigate(\"/\");\r\n    }\r\n    const loading=\"true\";\r\n    const color= \"#51E24A\";\r\n    const [tasks,setTasks]=useState([]);\r\n    const [items,setItems]=useState([]);\r\n    const [title,setTitle]=useState('');\r\n    const [description, setDesc]=useState('');\r\n    // gets taskCategory and tasks data\r\n    const getData=()=>{\r\n        fetch('https://rich5k.github.io/my-todo-data/taskCategory.json'\r\n        ,{\r\n        headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        }\r\n        }\r\n        )\r\n        .then(function(response){\r\n            // console.log(response)\r\n            return response.json();\r\n        })\r\n        .then(function(myJson) {\r\n            //console.log(myJson);\r\n            setTasks(myJson);\r\n        });\r\n\r\n        fetch('https://rich5k.github.io/my-todo-data/task.json'\r\n        ,{\r\n        headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        }\r\n        }\r\n        )\r\n        .then(function(response){\r\n            // console.log(response)\r\n            return response.json();\r\n        })\r\n        .then(function(myJson) {\r\n            //console.log(myJson);\r\n            setItems(myJson);\r\n        });\r\n    }\r\n    useEffect(()=>{\r\n        getData()\r\n    },[])\r\n    const [isHidden, setHidden] = useState(\"false\");\r\n    // toggles the visibilty of add item form\r\n    const ToggleClass = () => {\r\n        setHidden(!isHidden);\r\n        setTitle('');\r\n        setDesc('');\r\n    };\r\n\r\n    //handles the addition of task's item\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        var status = \"pending\";\r\n        var taskCategoryId = parseInt(id);\r\n        var comments= [];\r\n        var dateStarted = new Date().toISOString();\r\n        var dateEnded = null;\r\n        const task = {title, description,status,taskCategoryId, comments,dateStarted, dateEnded};\r\n        \r\n        fetch('https://rich5k.github.io/my-todo-data/task.json'\r\n        ,{\r\n            method: \"POST\",\r\n            headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(task)\r\n        }\r\n        )\r\n        .then(()=>{\r\n            console.log(\"new task added\");\r\n            getData();\r\n            ToggleClass();\r\n        })\r\n    }\r\n    return ( \r\n        <div className=\"TaskItems text-white grid grid-cols-3 mt-8\">\r\n            <div>\r\n                <button onClick={goHome} className=\"go-back ml-10 mt-4\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={4}>\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <div className=\"text-3xl text-white font-bold text-center\">\r\n                    {\r\n                    (tasks && tasks.length>0)? tasks.map((task)=>(\r\n                        \r\n                        (parseInt(task.id)===parseInt(id))?\r\n                            task.name : ''\r\n                        \r\n                    )):\r\n                    <div className=\"mt-30\">\r\n                        <PuffLoader color={color} loading={loading} size={150} />\r\n\r\n                    </div>\r\n                }</div>\r\n                {\r\n                    items && items.length>0 && items.map((item)=>(\r\n                        (parseInt(item.taskCategoryId)===parseInt(id)&& item.status === \"pending\")?\r\n                            <TaskItem id={item.id} title={item.title} desc={item.description} comments={item.comments} \r\n                            status= {item.status} taskCategoryId={item.taskCategoryId} dateStarted={item.dateStarted} \r\n                            dateEnded={item.dateEnded} getData={getData}/>: ''\r\n                        \r\n                    ))\r\n                }\r\n                {/* section for completed tasks */}\r\n                <div className=\"completed-tasks\">\r\n                    <span className=\"font-bold text-lg text-left\">Completed:</span>\r\n                    {\r\n                    items && items.length>0 && items.map((item)=>(\r\n                        (parseInt(item.taskCategoryId)===parseInt(id)&& item.status === \"done\")?\r\n                            <TaskItem id={item.id} title={item.title} desc={item.description} comments={item.comments} \r\n                            status= {item.status} taskCategoryId={item.taskCategoryId} dateStarted={item.dateStarted} \r\n                            dateEnded={item.dateEnded} getData={getData}/>: ''\r\n                        \r\n                    ))\r\n                }\r\n                </div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n                <button onClick={ToggleClass} className=\"add-task text-green-600 bg-white p-4 text-xl font-bold rounded-full\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"4\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 4v16m8-8H4\" />\r\n                    </svg>\r\n                </button>\r\n\r\n                {/* add task item form */}\r\n                <form action=\"\" className={isHidden ? \"add-form m-12 hidden\" : \"add-form m-12\"}>\r\n                    <input type=\"text\" value={title} onChange={e=>setTitle(e.target.value)} class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg  block w-60 p-2.5 mb-4 \" placeholder=\"Groceries\" required></input>\r\n                    <input type=\"text\" value={description} onChange={e=>setDesc(e.target.value)} class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg  block w-60 p-2.5  \" placeholder=\"To help me stock up...\" required></input>\r\n                    <button onClick={handleSubmit} class=\"mt-4 text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\">Create</button>\r\n                </form>\r\n            </div>\r\n\r\n            <Footer />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default TaskItems;","\r\nimport Tasks from \"./components/Tasks\";\r\nimport './App.css';\r\nimport React from 'react';\r\nimport {BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\r\nimport TaskItems from \"./components/TaskItems\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n          <Routes>\r\n          <Route path=\"/task/:id\" element={<TaskItems />}/> \r\n            <Route path=\"/\" element={<Tasks />} />\r\n          </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}